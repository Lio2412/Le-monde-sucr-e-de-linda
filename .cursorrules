{
  "name": "Le Monde Sucré de Linda",
  "version": "1.0.2",
  "lastUpdated": "2024-01-31",
  "description": "Règles de développement pour le projet Le Monde Sucré de Linda",
  "rules": [
    {
      "name": "Code Style",
      "rules": [
        "Utiliser des composants fonctionnels React",
        "Préférer les hooks React aux classes",
        "Utiliser TypeScript pour le typage statique",
        "Suivre les conventions ESLint et Prettier",
        "Utiliser des noms de variables et fonctions explicites en français",
        "Commenter le code complexe en français",
        "Toujours exporter correctement les services (export const serviceName)",
        "Vérifier les imports dans les hooks personnalisés"
      ]
    },
    {
      "name": "Architecture",
      "rules": [
        "Suivre l'architecture Next.js App Router",
        "Organiser les composants par fonctionnalité",
        "Utiliser les layouts Next.js appropriés",
        "Séparer la logique métier des composants UI",
        "Utiliser les hooks personnalisés pour la réutilisation de code",
        "Vérifier la cohérence des exports/imports entre les services",
        "Documenter les changements d'API dans le CHANGELOG"
      ]
    },
    {
      "name": "Performance",
      "rules": [
        "Optimiser les images avec next/image",
        "Utiliser le SSR quand approprié",
        "Implémenter le lazy loading pour les composants lourds",
        "Minimiser les re-renders inutiles",
        "Optimiser les requêtes API",
        "Maintenir les temps de réponse API sous les seuils définis",
        "Implémenter le cache HTTP approprié"
      ]
    },
    {
      "name": "Sécurité",
      "rules": [
        "Valider toutes les entrées utilisateur",
        "Utiliser des tokens CSRF",
        "Implémenter une authentification sécurisée",
        "Protéger les routes sensibles",
        "Suivre les bonnes pratiques OWASP",
        "Gérer correctement les erreurs d'authentification",
        "Logger les tentatives de connexion échouées"
      ]
    },
    {
      "name": "Implementation and Code Review",
      "rules": [
        "Effectuer une revue de code complète avant chaque commit",
        "Mettre à jour la liste TODO avec les tâches en cours et à venir",
        "Déclencher les pipelines CI/CD après chaque modification",
        "Vérifier la couverture de code et ajouter des tests si nécessaire",
        "Exécuter les vérifications de qualité et de sécurité",
        "Vérifier les performances et la charge",
        "Effectuer des tests manuels ou UAT si nécessaire",
        "Vérifier les imports et exports des services",
        "Tester les scénarios d'erreur d'authentification"
      ]
    },
    {
      "name": "Validation & Reporting",
      "rules": [
        "Rassembler les résultats des tests (unitaires, intégration, performance)",
        "Créer des tâches TODO pour les problèmes identifiés",
        "Confirmer que toutes les tâches liées sont complétées",
        "Documenter les changements dans le CHANGELOG",
        "Fournir un résumé concis des validations",
        "Récapituler la liste TODO mise à jour",
        "Mettre en place la surveillance post-déploiement",
        "Signaler les anomalies et créer des tâches correspondantes",
        "Surveiller les métriques de performance API",
        "Documenter les erreurs courantes et leurs solutions"
      ]
    },
    {
      "name": "Monitoring & Métriques",
      "rules": [
        "Surveiller les temps de réponse API (Login < 100ms, GET /me < 10ms)",
        "Maintenir un taux de cache > 90% pour les endpoints fréquents",
        "Optimiser la taille des réponses API",
        "Suivre les erreurs d'authentification",
        "Monitorer les pics de latence",
        "Alerter sur les dépassements de seuils de performance"
      ]
    }
  ]
} 